{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyProgramming\\\\ghoul_hunters\\\\Alexa_Skill-Ghoul_Hunters\\\\src\\\\GameScreen.js\";\nimport React from 'react';\nimport Timer from './Timer.js';\nconst HIDE_TREASURE_TIME = 10;\nconst HEADSTART_TIME = 15;\n\nclass GameScreen extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, this.renderGameHUD());\n  }\n  /* Timer function will call this once timer hits 0. This function let's the\r\n  server know that the treasure is now hidden */\n\n\n  hideTreasureCallback() {\n    this.props.clientHelper.sendMessage(JSON.stringify({\n      action: \"treasure_hidden\",\n      clientID: this.props.gameState.clientID\n    }));\n  }\n\n  renderGameHUD() {\n    if (this.props.gameState.playing) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, \"Location: \", this.props.gameState.location), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.props.updateLocationCallback(clickEvent),\n        id: \"NavN\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \" North \"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.props.updateLocationCallback(clickEvent),\n        id: \"NavE\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, \" East \"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.props.updateLocationCallback(clickEvent),\n        id: \"NavS\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, \" South \"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.props.updateLocationCallback(clickEvent),\n        id: \"NavW\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, \" West \"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \"Waiting on ghoul to hide the treasure...\"), /*#__PURE__*/React.createElement(Timer, {\n        initTimerValue: HIDE_TREASURE_TIME,\n        timerCompletedCallback: () => this.hideTreasureCallback(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n\n}\n\nexport default GameScreen;","map":{"version":3,"sources":["D:/MyProgramming/ghoul_hunters/Alexa_Skill-Ghoul_Hunters/src/GameScreen.js"],"names":["React","Timer","HIDE_TREASURE_TIME","HEADSTART_TIME","GameScreen","Component","constructor","props","render","renderGameHUD","hideTreasureCallback","clientHelper","sendMessage","JSON","stringify","action","clientID","gameState","playing","location","updateLocationCallback","clickEvent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,MAAMC,kBAAkB,GAAG,EAA3B;AACA,MAAMC,cAAc,GAAG,EAAvB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,aAAL,EADH,CADF;AAMD;AAED;;;;AAEAC,EAAAA,oBAAoB,GAAG;AACrB,SAAKH,KAAL,CAAWI,YAAX,CAAwBC,WAAxB,CAAoCC,IAAI,CAACC,SAAL,CAAe;AACjDC,MAAAA,MAAM,EAAE,iBADyC;AAEjDC,MAAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWU,SAAX,CAAqBD;AAFkB,KAAf,CAApC;AAID;;AAEDP,EAAAA,aAAa,GAAG;AAEd,QAAI,KAAKF,KAAL,CAAWU,SAAX,CAAqBC,OAAzB,EAAkC;AAChC,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAe,KAAKX,KAAL,CAAWU,SAAX,CAAqBE,QAApC,CADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKZ,KAAL,CAAWa,sBAAX,CAAkCC,UAAlC,CAAvB;AAAuE,QAAA,EAAE,EAAC,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKd,KAAL,CAAWa,sBAAX,CAAkCC,UAAlC,CAAvB;AAAsE,QAAA,EAAE,EAAC,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKd,KAAL,CAAWa,sBAAX,CAAkCC,UAAlC,CAAvB;AAAsE,QAAA,EAAE,EAAC,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,eAKE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKd,KAAL,CAAWa,sBAAX,CAAkCC,UAAlC,CAAvB;AAAsE,QAAA,EAAE,EAAC,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CADF;AASD,KAVD,MAWK;AACH,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADF,eAEE,oBAAC,KAAD;AAAO,QAAA,cAAc,EAAEnB,kBAAvB;AAA2C,QAAA,sBAAsB,EAAE,MAAM,KAAKQ,oBAAL,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;AACF;;AA9CsC;;AAiDzC,eAAeN,UAAf","sourcesContent":["import React from 'react';\r\nimport Timer from './Timer.js';\r\n\r\nconst HIDE_TREASURE_TIME = 10;\r\nconst HEADSTART_TIME = 15;\r\n\r\nclass GameScreen extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        {this.renderGameHUD()}\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n  /* Timer function will call this once timer hits 0. This function let's the\r\n  server know that the treasure is now hidden */\r\n  hideTreasureCallback() {\r\n    this.props.clientHelper.sendMessage(JSON.stringify({\r\n      action: \"treasure_hidden\",\r\n      clientID: this.props.gameState.clientID\r\n    }));\r\n  }\r\n\r\n  renderGameHUD() {\r\n\r\n    if (this.props.gameState.playing) {\r\n      return (\r\n        <div>\r\n          <h1>Location: {this.props.gameState.location}</h1>\r\n          <button onClick={() => this.props.updateLocationCallback(clickEvent) } id=\"NavN\"> North </button>\r\n          <button onClick={() => this.props.updateLocationCallback(clickEvent)} id=\"NavE\"> East </button>\r\n          <button onClick={() => this.props.updateLocationCallback(clickEvent)} id=\"NavS\"> South </button>\r\n          <button onClick={() => this.props.updateLocationCallback(clickEvent)} id=\"NavW\"> West </button>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n          <p>Waiting on ghoul to hide the treasure...</p>\r\n          <Timer initTimerValue={HIDE_TREASURE_TIME} timerCompletedCallback={() => this.hideTreasureCallback()}/>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default GameScreen;\r\n"]},"metadata":{},"sourceType":"module"}