{"ast":null,"code":"/* The location class is a helper class that is used to get information about\r\nlocation and how to update the current location within the game. */\nconst LOCATION_GRID = [[\"Observatory\", \"Courtyard\", \"Cellar\", \"Armory\"], [\"Master Bedroom\", \"Ballroom\", \"Kitchen\", \"Butler's Pantry\"], [\"Nursery\", \"Library\", \"Dining Hall\", \"Powder Room\"], [\"Study\", \"Gallery\", \"Grand Foyer\", \"Parlor\"]];\nconst STARTING_ROW = 3;\nconst STARTING_COL = 2;\n\nclass Location {\n  constructor() {\n    this.currentRow = STARTING_ROW;\n    this.currentCol = STARTING_COL;\n  } //The location the user begins at when the game starts\n\n\n  getStartingLocation() {\n    return LOCATION_GRID[this.currentRow][this.currentCol];\n  }\n  /*Accepts a param that tells you in which direction the user moved. This function\r\n  will update the current column and row based on where the user moved.\r\n      direction:\r\n      0 ==> North\r\n    1 ==> East\r\n    2 ==> South\r\n    3 ==> West\r\n    */\n\n\n  updateLocation(direction) {\n    //I may replace direction with an enum. I will keep it as an integer for now.\n    switch (direction) {\n      case 0:\n        if (this.currentRow == 0) {\n          throw \"Cannot travel further North.\";\n        } else {\n          this.currentRow--;\n        }\n\n        break;\n\n      case 1:\n        if (this.currentCol == 3) {\n          throw \"Cannot travel further East.\";\n        } else {\n          this.currentCol++;\n        }\n\n        break;\n\n      case 2:\n        if (this.currentRow == 3) {\n          throw \"Cannot travel further South.\";\n        } else {\n          this.currentRow++;\n        }\n\n        break;\n\n      case 3:\n        if (this.currentCol == 0) {\n          throw \"Cannot travel further West.\";\n        } else {\n          this.currentCol--;\n        }\n\n        break;\n    }\n  } // returns the next location to the caller based on the user's previous movement\n\n\n  getNextLocation(direction) {\n    this.updateLocation(direction);\n    return LOCATION_GRID[this.currentRow][this.currentCol];\n  }\n\n}\n\nexport default Location;","map":{"version":3,"sources":["D:/MyProgramming/ghoul_hunters/src/Location.js"],"names":["LOCATION_GRID","STARTING_ROW","STARTING_COL","Location","constructor","currentRow","currentCol","getStartingLocation","updateLocation","direction","getNextLocation"],"mappings":"AAAA;;AAIA,MAAMA,aAAa,GAAG,CACE,CAAC,aAAD,EAAgB,WAAhB,EAA6B,QAA7B,EAAuC,QAAvC,CADF,EAEE,CAAC,gBAAD,EAAmB,UAAnB,EAA+B,SAA/B,EAA0C,iBAA1C,CAFF,EAGE,CAAC,SAAD,EAAY,SAAZ,EAAuB,aAAvB,EAAsC,aAAtC,CAHF,EAIE,CAAC,OAAD,EAAU,SAAV,EAAqB,aAArB,EAAoC,QAApC,CAJF,CAAtB;AAOA,MAAMC,YAAY,GAAG,CAArB;AACA,MAAMC,YAAY,GAAG,CAArB;;AAEA,MAAMC,QAAN,CAAe;AAEbC,EAAAA,WAAW,GAAG;AAEZ,SAAKC,UAAL,GAAkBJ,YAAlB;AACA,SAAKK,UAAL,GAAkBJ,YAAlB;AACD,GANY,CAQb;;;AACAK,EAAAA,mBAAmB,GAAG;AAElB,WAAOP,aAAa,CAAC,KAAKK,UAAN,CAAb,CAA+B,KAAKC,UAApC,CAAP;AAEH;AAED;;;;;;;;;;AAWAE,EAAAA,cAAc,CAACC,SAAD,EAAY;AAExB;AACA,YAAOA,SAAP;AAEE,WAAK,CAAL;AACE,YAAG,KAAKJ,UAAL,IAAmB,CAAtB,EAAyB;AACvB,gBAAM,8BAAN;AACD,SAFD,MAGK;AACH,eAAKA,UAAL;AACD;;AACH;;AAGA,WAAK,CAAL;AACE,YAAG,KAAKC,UAAL,IAAmB,CAAtB,EAAyB;AACvB,gBAAM,6BAAN;AACD,SAFD,MAGK;AACH,eAAKA,UAAL;AACD;;AACH;;AAGA,WAAK,CAAL;AACE,YAAG,KAAKD,UAAL,IAAmB,CAAtB,EAAyB;AACvB,gBAAM,8BAAN;AACD,SAFD,MAGK;AACH,eAAKA,UAAL;AACD;;AACH;;AAGA,WAAK,CAAL;AACE,YAAG,KAAKC,UAAL,IAAmB,CAAtB,EAAyB;AACvB,gBAAM,6BAAN;AACD,SAFD,MAGK;AACH,eAAKA,UAAL;AACD;;AACH;AAvCF;AA2CD,GAxEY,CA2Eb;;;AACAI,EAAAA,eAAe,CAACD,SAAD,EAAY;AAEzB,SAAKD,cAAL,CAAoBC,SAApB;AAEA,WAAOT,aAAa,CAAC,KAAKK,UAAN,CAAb,CAA+B,KAAKC,UAApC,CAAP;AAED;;AAlFY;;AAqFf,eAAeH,QAAf","sourcesContent":["/* The location class is a helper class that is used to get information about\r\nlocation and how to update the current location within the game. */\r\n\r\n\r\nconst LOCATION_GRID = [\r\n                        [\"Observatory\", \"Courtyard\", \"Cellar\", \"Armory\"],\r\n                        [\"Master Bedroom\", \"Ballroom\", \"Kitchen\", \"Butler's Pantry\"],\r\n                        [\"Nursery\", \"Library\", \"Dining Hall\", \"Powder Room\"],\r\n                        [\"Study\", \"Gallery\", \"Grand Foyer\", \"Parlor\"],\r\n                      ];\r\n\r\nconst STARTING_ROW = 3;\r\nconst STARTING_COL = 2;\r\n\r\nclass Location {\r\n\r\n  constructor() {\r\n\r\n    this.currentRow = STARTING_ROW;\r\n    this.currentCol = STARTING_COL;\r\n  }\r\n\r\n  //The location the user begins at when the game starts\r\n  getStartingLocation() {\r\n\r\n      return LOCATION_GRID[this.currentRow][this.currentCol];\r\n\r\n  }\r\n\r\n  /*Accepts a param that tells you in which direction the user moved. This function\r\n  will update the current column and row based on where the user moved.\r\n\r\n    direction:\r\n\r\n    0 ==> North\r\n    1 ==> East\r\n    2 ==> South\r\n    3 ==> West\r\n\r\n  */\r\n  updateLocation(direction) {\r\n\r\n    //I may replace direction with an enum. I will keep it as an integer for now.\r\n    switch(direction) {\r\n\r\n      case 0:\r\n        if(this.currentRow == 0) {\r\n          throw \"Cannot travel further North.\";\r\n        }\r\n        else {\r\n          this.currentRow--;\r\n        }\r\n      break;\r\n\r\n\r\n      case 1:\r\n        if(this.currentCol == 3) {\r\n          throw \"Cannot travel further East.\";\r\n        }\r\n        else {\r\n          this.currentCol++;\r\n        }\r\n      break;\r\n\r\n\r\n      case 2:\r\n        if(this.currentRow == 3) {\r\n          throw \"Cannot travel further South.\";\r\n        }\r\n        else {\r\n          this.currentRow++;\r\n        }\r\n      break;\r\n\r\n\r\n      case 3:\r\n        if(this.currentCol == 0) {\r\n          throw \"Cannot travel further West.\";\r\n        }\r\n        else {\r\n          this.currentCol--;\r\n        }\r\n      break;\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // returns the next location to the caller based on the user's previous movement\r\n  getNextLocation(direction) {\r\n\r\n    this.updateLocation(direction);\r\n\r\n    return LOCATION_GRID[this.currentRow][this.currentCol];\r\n\r\n  }\r\n}\r\n\r\nexport default Location;\r\n"]},"metadata":{},"sourceType":"module"}